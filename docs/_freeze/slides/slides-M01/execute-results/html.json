{
  "hash": "216489d22d388ad11165cd4df36faff7",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Introduction\"\nsubtitle: \"INTEG 475 | [Data, Methods, and Models for Future Cities]{.yellow} | Module 01\"\nauthor: Dr. John McLevey\ninstitute: \"[Knowledge Integration](https://uwaterloo.ca/knowledge-integration/), [Sociology & Legal Studies](https://uwaterloo.ca/sociology-and-legal-studies/) <br> University of Waterloo\"\nformat:\n  revealjs: \n    theme: [default, custom.scss]\n    embed-resources: true\n    execute:\n      echo: true\n      warning: false\n      cache: true\n      freeze: true\n    slide-number: true\n    chalkboard: false\n    preview-links: auto\n    smaller: true\n    fig-align: left\n    fig-format: svg\n    lightbox: true\n    scrollable: true\n    code-overflow: scroll\n    code-fold: false\n    code-line-numbers: true\n    code-copy: hover\n    code-block-border-left: gray \n    code-block-bg: slate\n    reference-location: document\n    logo: ../images/logo.png\n    footer: <https://www.johnmclevey.com/social-media-web-based-research/>\n    email-obfuscation: javascript\nhighlight-style: \"nord\"\n---\n\n## Columns\n\n:::: {.columns}\n\n::: {.column width=50%}\nLeft.\nðŸ”¥ðŸ”¥ðŸ”¥\n:::\n\n::: {.column width=50%}\nRight.\nðŸ”¥ðŸ”¥ðŸ”¥\n:::\n\n::::\n\n## Python\n\nUsing `#| output-location: column-fragment` puts the output in the adjacent column space.\n\n::: {#dd7d1975 .cell output-location='column-fragment' execution_count=2}\n``` {.python .cell-code}\nprint(\"hello world!\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nhello world!\n```\n:::\n:::\n\n\n## Python\n\n::: {#640eed47 .cell output-location='column' execution_count=3}\n``` {.python .cell-code}\nimport matplotlib.pyplot as plt\nimport seaborn as sns\ntips = sns.load_dataset(\"tips\")\ntips.head()\n```\n\n::: {.cell-output .cell-output-display execution_count=2}\n```{=html}\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>total_bill</th>\n      <th>tip</th>\n      <th>sex</th>\n      <th>smoker</th>\n      <th>day</th>\n      <th>time</th>\n      <th>size</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>16.99</td>\n      <td>1.01</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>10.34</td>\n      <td>1.66</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>21.01</td>\n      <td>3.50</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>23.68</td>\n      <td>3.31</td>\n      <td>Male</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>2</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>24.59</td>\n      <td>3.61</td>\n      <td>Female</td>\n      <td>No</td>\n      <td>Sun</td>\n      <td>Dinner</td>\n      <td>4</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n```\n:::\n:::\n\n\n## Python\n\nOutput on the **following** slide...\n\n::: {#03e90ec6 .cell output-location='slide' execution_count=4}\n``` {.python .cell-code}\nsns.scatterplot(data=tips, x=\"total_bill\", y=\"tip\")\nplt.show()\n```\n\n::: {.cell-output .cell-output-display}\n![](slides-M01_files/figure-revealjs/cell-4-output-1.svg){}\n:::\n:::\n\n\n## In Development\n\n![](images/everything_is_fine.jpg)\n\n::: {.notes}\nSpeaker notes go here.\n:::\n\n## Documentation\n\n- [Presenations with Quarto](https://quarto.org/docs/presentations/revealjs/)\n- See also basic `reveal.js` stuff, can port over old content.\n- You [can]{.yellow} have footnotes.^[See how it works?]\n- Another^[Yep.]\n\n# code.\n\n## Highlight Code\n\nSee lines 6-8.\n\n```{.python code-line-numbers=\"6-8\"}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n## Highlight Code\n\nSee lines 7 and 9.\n\n```{.python code-line-numbers=\"7,9\"}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n## Highlight Code\n\nFinally, you can highlight different line ranges progressively by separating them with |. For example, here we start by showing all lines, then progress to highlighting line 6, and finally to highlighting line 9:\n\n```{.python code-line-numbers=\"|6|9\"}\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nr = np.arange(0, 2, 0.01)\ntheta = 2 * np.pi * r\nfig, ax = plt.subplots(subplot_kw={'projection': 'polar'})\nax.plot(theta, r)\nax.set_rticks([0.5, 1, 1.5, 2])\nax.grid(True)\nplt.show()\n```\n\n##\n\n::: {#3335b741 .cell execution_count=5}\n``` {.python .cell-code}\nprint('Hi...')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHi...\n```\n:::\n:::\n\n\n##\n\n::: {#6b0f24dd .cell execution_count=6}\n``` {.python .cell-code}\nprint('Hi...')\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHi...\n```\n:::\n:::\n\n\n## Annotate Code\n\n```python\nimport pymc # <1>\nprint('Hello World') # <2>\nprint('Hello World') # <3>\nprint('Hello World') # <4>\nprint('Hello World') # <5>\n\n```\n\n1. this is a test\n2. this is a test\n3. this is a test\n4. this is a test\n5. this is a test \n\n",
    "supporting": ["slides-M01_files"],
    "filters": [],
    "includes": {
      "include-in-header": [
        "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/require.js/2.3.6/require.min.js\" integrity=\"sha512-c3Nl8+7g4LMSTdrm621y7kf9v3SDPnhxLNhcjFJbKECVnmZHTdo+IRO05sNLTH/D3vA6u1X32ehoLC7WFVdheg==\" crossorigin=\"anonymous\"></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js\" integrity=\"sha512-bLT0Qm9VnAYZDflyKcBaQ2gg0hSYNQrJ8RilYldYQ1FxQYoCLtUjuuRuZo+fjqhx/qtq/1itJ0C2ejDxltZVFg==\" crossorigin=\"anonymous\" data-relocate-top=\"true\"></script>\n<script type=\"application/javascript\">define('jquery', [],function() {return window.jQuery;})</script>\n"
      ]
    }
  }
}
